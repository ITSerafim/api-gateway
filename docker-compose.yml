version: '3'

services:
  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_DB=$DB_NAME
    env_file:
      - '.env'
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    ports:
      - "5432"
    restart: always

  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_USER_PASSWORD
    env_file:
      - '.env'
    volumes:
      - mongo:/var/lib/mongodb/data
    restart: always

  proxy-service:
    build: ./proxy-service
    container_name: proxy_service
    volumes:
      - ./proxy-service:/proxy-service
    env_file:
      - '.env'
    environment:
      - LOG_PATH=$LOG_PATH
      - PROXY_ADDRESS=$PROXY_ADDRESS
      - PROXY_PREFIX=$PROXY_PREFIX
      - PROXY_PORT=$PROXY_PORT
    ports:
      - '5001:5001'

  auth-service:
    build: ./auth-service
    container_name: auth_service
    volumes:
      - ./auth-service:/auth-service
    env_file:
      - '.env'
    environment:
      - LOG_PATH=$LOG_PATH
      - SECRET_KEY=$SECRET_KEY
      - DB_HOST=$DB_HOST
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DIALECT=$DIALECT
      - DB_PORT=$DB_PORT
    ports:
      - '5002:5002'
    depends_on:
      - db

  organization-service:
    build: ./organization-service
    container_name: org_service
    volumes:
      - ./organization-service:/organization-service
    env_file:
      - '.env'
    environment:
      - LOG_PATH=$LOG_PATH
      - MONGO_USER=$MONGO_USER
      - MONGO_USER_PASSWORD=$MONGO_USER_PASSWORD
      - MONGO_HOST=$MONGO_HOST
      - MONGO_PORT=$MONGO_PORT
      - CLUSTER=$CLUSTER
    ports:
      - '5003:5003'
    depends_on:
      - mongodb

volumes:
  db:
    driver: local
  mongo:
    driver: local
